---
AWSTemplateFormatVersion: 2010-09-09

Description: Nested Fargate Stack deployment

Metadata:

  Authors:
    Description: Nathan Glover (nathan@glovers.id.au)

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Project Information
      Parameters:
        - ProjectName
        - BucketName

    - Label:
        default: Networking Resources
      Parameters:
        - ClassB

    - Label:
        default: Base Fargate Cluster
      Parameters:
        - ClusterName

    - Label:
        default: Defense Fargate Service
      Parameters:
        - DefenseServiceName
        - DefenseContainerName
        - DefenseContainerPort
        - DefenseContainerCpu
        - DefenseContainerMemory
        - DefenseDesiredCount
        - DefenseHealthEndpoint

    - Label:
        default: Offense Fargate Service
      Parameters:
        - OffenseServiceName
        - OffenseContainerName
        - OffenseContainerPort
        - OffenseContainerCpu
        - OffenseContainerMemory
        - OffenseDesiredCount
        - OffenseHealthEndpoint

    - Label:
        default: Arbiter Fargate Service
      Parameters:
        - ArbiterServiceName
        - ArbiterContainerName
        - ArbiterContainerPort
        - ArbiterContainerCpu
        - ArbiterContainerMemory
        - ArbiterDesiredCount
        - ArbiterHealthEndpoint

    - Label:
        default: Codebuild Base
      Parameters:
        - CodeRepositoryURL

    - Label:
        default: Defense Codebuild Service
      Parameters:
        - DefenseBuildspecLocation
        - DefenseEnvironmentType
        - DefenseComputeType
        - DefenseBuildImage

    - Label:
        default: Offense Codebuild Service
      Parameters:
        - OffenseBuildspecLocation
        - OffenseEnvironmentType
        - OffenseComputeType
        - OffenseBuildImage

    - Label:
        default: Arbiter Codebuild Service
      Parameters:
        - ArbiterBuildspecLocation
        - ArbiterEnvironmentType
        - ArbiterComputeType
        - ArbiterBuildImage

    ParameterLabels:
      ProjectName:
        default: Project Name
      BucketName:
        default: Bucket Name

      ClassB:
        default: (10.XXX.0.0/16)

      ClusterName:
        default: Cluster Name

      DefenseServiceName:
        default: Service Name
      DefenseContainerName:
        default: Docker Image Name
      DefenseContainerPort:
        default: Container Port
      DefenseContainerCpu:
        default: Container Cpu
      DefenseContainerMemory:
        default: Container Memory
      DefenseDesiredCount:
        default: Number of Tasks
      DefenseHealthEndpoint:
        default: Health Check Endpoint

      OffenseServiceName:
        default: Service Name
      OffenseContainerName:
        default: Docker Image Name
      OffenseContainerPort:
        default: Container Port
      OffenseContainerCpu:
        default: Container Cpu
      OffenseContainerMemory:
        default: Container Memory
      OffenseDesiredCount:
        default: Number of Tasks
      OffenseHealthEndpoint:
        default: Health Check Endpoint

      ArbiterServiceName:
        default: Service Name
      ArbiterContainerName:
        default: Docker Image Name
      ArbiterContainerPort:
        default: Container Port
      ArbiterContainerCpu:
        default: Container Cpu
      ArbiterContainerMemory:
        default: Container Memory
      ArbiterDesiredCount:
        default: Number of Tasks
      ArbiterHealthEndpoint:
        default: Health Check Endpoint

      CodeRepositoryURL:
        default: Git Repo URL

      DefenseBuildspecLocation:
        default: buildspec file
      DefenseEnvironmentType:
        default: Build OS
      DefenseComputeType:
        default: Build Resource
      DefenseBuildImage:
        default: Build Image

      OffenseBuildspecLocation:
        default: buildspec file
      OffenseEnvironmentType:
        default: Build OS
      OffenseComputeType:
        default: Build Resource
      OffenseBuildImage:
        default: Build Image

      ArbiterBuildspecLocation:
        default: buildspec file
      ArbiterEnvironmentType:
        default: Build OS
      ArbiterComputeType:
        default: Build Resource
      ArbiterBuildImage:
        default: Build Image

Parameters:

  ProjectName:
    Description: Project Name (used for Tagging)
    Type: String
  BucketName:
    Description: Bucket name where nested templates live
    Type: String

  ClassB:
    Description: Class B of VPC (10.XXX.0.0/16)
    Type: Number

  ClusterName:
    Description: Fargate Cluster Name (will be exported for use with resources in this project)
    Type: String

  DefenseServiceName:
    Type: String
    Description: Name given to the service being run on the Fargate Cluster
  DefenseContainerName:
    Type: String
    Description: The name of a docker image that should be run from ECR
  DefenseContainerPort:
    Type: Number
    Description: What port number the application inside the docker container
  DefenseContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  DefenseContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  DefenseDesiredCount:
    Type: Number
    Description: How many copies of the service task to run
  DefenseHealthEndpoint:
    Type: String
    Description: Health Endpoint to target via Application load balancer health checks

  OffenseServiceName:
    Type: String
    Description: Name given to the service being run on the Fargate Cluster
  OffenseContainerName:
    Type: String
    Description: The name of a docker image that should be run from ECR
  OffenseContainerPort:
    Type: Number
    Description: What port number the application inside the docker container
  OffenseContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  OffenseContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  OffenseDesiredCount:
    Type: Number
    Description: How many copies of the service task to run
  OffenseHealthEndpoint:
    Type: String
    Description: Health Endpoint to target via Application load balancer health checks

  ArbiterServiceName:
    Type: String
    Description: Name given to the service being run on the Fargate Cluster
  ArbiterContainerName:
    Type: String
    Description: The name of a docker image that should be run from ECR
  ArbiterContainerPort:
    Type: Number
    Description: What port number the application inside the docker container
  ArbiterContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  ArbiterContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  ArbiterDesiredCount:
    Type: Number
    Description: How many copies of the service task to run
  ArbiterHealthEndpoint:
    Type: String
    Description: Health Endpoint to target via Application load balancer health checks

  CodeRepositoryURL:
    Description: URL of the repo which contains CFN template.
    Type: String

  DefenseBuildspecLocation:
    Description: Location of buildspec configuration
    Type: String
  DefenseEnvironmentType:
    Description: Type of build environment to use for related builds.
    Type: String
    AllowedValues:
      - WINDOWS_CONTAINER
      - LINUX_CONTAINER
  DefenseComputeType:
    Description: Compute resources the build project will use to build.
    Type: String
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
  DefenseBuildImage:
    Description: System Image identifier of the image to use for code build
    Type: String

  OffenseBuildspecLocation:
    Description: Location of buildspec configuration
    Type: String
  OffenseEnvironmentType:
    Description: Type of build environment to use for related builds.
    Type: String
    AllowedValues:
      - WINDOWS_CONTAINER
      - LINUX_CONTAINER
  OffenseComputeType:
    Description: Compute resources the build project will use to build.
    Type: String
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
  OffenseBuildImage:
    Description: System Image identifier of the image to use for code build
    Type: String

  ArbiterBuildspecLocation:
    Description: Location of buildspec configuration
    Type: String
  ArbiterEnvironmentType:
    Description: Type of build environment to use for related builds.
    Type: String
    AllowedValues:
      - WINDOWS_CONTAINER
      - LINUX_CONTAINER
  ArbiterComputeType:
    Description: Compute resources the build project will use to build.
    Type: String
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
  ArbiterBuildImage:
    Description: System Image identifier of the image to use for code build
    Type: String

Resources:

  baseFargate:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProjectName:
          !Ref ProjectName
        ClusterName:
          !Ref ClusterName
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/base/fargate-cluster.yaml'

  baseNetworking:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ClassB:
          !Ref ClassB
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/base/vpc-networking.yaml'

  defenseService:
    DependsOn: [ baseFargate, baseNetworking ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ServiceName:
          !Ref DefenseServiceName
        VPCId:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        PublicSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPublic ]
        PrivateSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        ContainerName:
          !Ref DefenseContainerName
        ContainerPort:
          !Ref DefenseContainerPort
        ContainerCpu:
          !Ref DefenseContainerCpu
        ContainerMemory:
          !Ref DefenseContainerMemory
        DesiredCount:
          !Ref DefenseDesiredCount
        HealthEndpoint:
          !Ref DefenseHealthEndpoint
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/base/fargate-service.yaml'

  offenseService:
    DependsOn: [ baseFargate, baseNetworking ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ServiceName:
          !Ref OffenseServiceName
        VPCId:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        PublicSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPublic ]
        PrivateSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        ContainerName:
          !Ref OffenseContainerName
        ContainerPort:
          !Ref OffenseContainerPort
        ContainerCpu:
          !Ref OffenseContainerCpu
        ContainerMemory:
          !Ref OffenseContainerMemory
        DesiredCount:
          !Ref OffenseDesiredCount
        HealthEndpoint:
          !Ref OffenseHealthEndpoint
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/base/fargate-service.yaml'

  arbiterService:
    DependsOn: [ baseFargate, baseNetworking ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ServiceName:
          !Ref ArbiterServiceName
        VPCId:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        PublicSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPublic ]
        PrivateSubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        ContainerName:
          !Ref ArbiterContainerName
        ContainerPort:
          !Ref ArbiterContainerPort
        ContainerCpu:
          !Ref ArbiterContainerCpu
        ContainerMemory:
          !Ref ArbiterContainerMemory
        DesiredCount:
          !Ref ArbiterDesiredCount
        HealthEndpoint:
          !Ref ArbiterHealthEndpoint
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/extended/fargate-service-arbiter.yaml'

  defenseCodebuild:
    DependsOn: [ baseFargate, baseNetworking, defenseService ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPC:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        SubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        FargateService:
          !Ref DefenseServiceName
        CodeRepositoryURL:
          !Ref CodeRepositoryURL
        BuildspecLocation:
          !Ref DefenseBuildspecLocation
        ImageRepoName:
          !Ref DefenseContainerName
        EnvironmentType:
          !Ref DefenseEnvironmentType
        ComputeType:
          !Ref DefenseComputeType
        BuildImage:
          !Ref DefenseBuildImage
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/cicd/codebuild.yaml'

  offenseCodebuild:
    DependsOn: [ baseFargate, baseNetworking, offenseService ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPC:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        SubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        FargateService:
          !Ref OffenseServiceName
        CodeRepositoryURL:
          !Ref CodeRepositoryURL
        BuildspecLocation:
          !Ref OffenseBuildspecLocation
        ImageRepoName:
          !Ref OffenseContainerName
        EnvironmentType:
          !Ref OffenseEnvironmentType
        ComputeType:
          !Ref OffenseComputeType
        BuildImage:
          !Ref OffenseBuildImage
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/cicd/codebuild.yaml'

  arbiterCodebuild:
    DependsOn: [ baseFargate, baseNetworking, arbiterService ]
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPC:
          !GetAtt [ baseNetworking, Outputs.VPC ]
        SubnetIDs:
          !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
        FargateCluster:
          !GetAtt [ baseFargate, Outputs.FargateCluster ]
        FargateService:
          !Ref ArbiterServiceName
        CodeRepositoryURL:
          !Ref CodeRepositoryURL
        BuildspecLocation:
          !Ref ArbiterBuildspecLocation
        ImageRepoName:
          !Ref ArbiterContainerName
        EnvironmentType:
          !Ref ArbiterEnvironmentType
        ComputeType:
          !Ref ArbiterComputeType
        BuildImage:
          !Ref ArbiterBuildImage
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/service-slayer/cloudformation/cicd/codebuild.yaml'

Outputs:

  DefenseApiEndpoint:
    Description: API Endpoint for the Defense Service
    Value: !GetAtt [ defenseService, Outputs.EndpointUrl ]

  OffenseApiEndpoint:
    Description: API Endpoint for the Offense Service
    Value: !GetAtt [ offenseService, Outputs.EndpointUrl ]

  ArbiterApiEndpoint:
    Description: API Endpoint for the Arbiter Service
    Value: !GetAtt [ arbiterService, Outputs.EndpointUrl ]
